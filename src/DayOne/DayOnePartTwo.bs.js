// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Belt_Int from "rescript/lib/es6/belt_Int.js";
import * as Utilities from "../Utilities.bs.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";

function parse(line) {
  var line$1 = line.trim();
  if (line$1 === "") {
    return 0;
  }
  var numbers = [
    [
      "0",
      "0"
    ],
    [
      "1",
      "1"
    ],
    [
      "2",
      "2"
    ],
    [
      "3",
      "3"
    ],
    [
      "4",
      "4"
    ],
    [
      "5",
      "5"
    ],
    [
      "6",
      "6"
    ],
    [
      "7",
      "7"
    ],
    [
      "8",
      "8"
    ],
    [
      "9",
      "9"
    ],
    [
      "one",
      "1"
    ],
    [
      "two",
      "2"
    ],
    [
      "three",
      "3"
    ],
    [
      "four",
      "4"
    ],
    [
      "five",
      "5"
    ],
    [
      "six",
      "6"
    ],
    [
      "seven",
      "7"
    ],
    [
      "eight",
      "8"
    ],
    [
      "nine",
      "9"
    ]
  ];
  var indexes = numbers.map(function (param) {
        var match = param[0];
        return [
                param[1],
                line$1.indexOf(match),
                line$1.lastIndexOf(match)
              ];
      });
  var first = {
    contents: [
      undefined,
      1000000
    ]
  };
  var last = {
    contents: [
      undefined,
      -1000000
    ]
  };
  indexes.forEach(function (param) {
        var currentLastIndex = param[2];
        var currentFirstIndex = param[1];
        var number = param[0];
        var match = first.contents;
        var match$1 = last.contents;
        if (currentFirstIndex > -1 && currentFirstIndex < match[1]) {
          first.contents = [
            number,
            currentFirstIndex
          ];
        }
        if (currentLastIndex > match$1[1]) {
          last.contents = [
            number,
            currentLastIndex
          ];
          return ;
        }
        
      });
  var match = first.contents;
  var match$1 = last.contents;
  var first$1 = match[0];
  if (first$1 !== undefined) {
    var last$1 = match$1[0];
    if (last$1 !== undefined) {
      return Belt_Option.getWithDefault(Belt_Int.fromString("" + first$1 + "" + last$1 + ""), 0);
    }
    
  }
  console.log("Failed to parse line: " + line$1 + "");
  return 0;
}

function sum(input) {
  return input.split("\n").map(parse).reduce((function (sum, n) {
                return sum + n | 0;
              }), 0);
}

console.log(sum(Utilities.input));

var input = Utilities.input;

var input2 = "two1nine\neightwothree\nabcone2threexyz\nxtwone3four\n4nineeightseven2\nzoneight234\n7pqrstsixteen";

var input3 = "gsjgklneight6zqfz";

export {
  input ,
  input2 ,
  input3 ,
  parse ,
  sum ,
}
/*  Not a pure module */
