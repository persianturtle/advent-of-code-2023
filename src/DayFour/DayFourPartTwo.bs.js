// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Js_dict from "rescript/lib/es6/js_dict.js";
import * as Belt_Int from "rescript/lib/es6/belt_Int.js";
import * as Utilities from "../Utilities.bs.js";
import * as Caml_array from "rescript/lib/es6/caml_array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";

var memo = {};

function processCard(cards, card, totalCardsSoFar) {
  totalCardsSoFar.contents = totalCardsSoFar.contents + 1 | 0;
  var cardNumber = Belt_Option.getWithDefault(Belt_Int.fromString(Caml_array.get(Caml_array.get(card.split("|"), 0).split(":"), 0).replace(/\D/g, "")), 0);
  var amountOfWinners = Js_dict.get(memo, String(cardNumber));
  if (amountOfWinners !== undefined) {
    for(var index = cardNumber ,index_finish = cardNumber + amountOfWinners | 0; index < index_finish; ++index){
      processCard(cards, Caml_array.get(cards, index), totalCardsSoFar);
    }
    return ;
  }
  var winningNumbers = Caml_array.get(Caml_array.get(card.split("|"), 0).split(":"), 1).split(" ").map(function (string) {
          return string.trim();
        }).filter(function (string) {
        return string.trim().length > 0;
      });
  var numbers = Caml_array.get(card.split("|"), 1).split(" ").map(function (string) {
          return string.trim();
        }).filter(function (string) {
        return string.trim().length > 0;
      });
  var amountOfWinners$1 = winningNumbers.reduce((function (amountOfWinners, winningNumber) {
          if (numbers.includes(winningNumber)) {
            return amountOfWinners + 1 | 0;
          } else {
            return amountOfWinners;
          }
        }), 0);
  memo[String(cardNumber)] = amountOfWinners$1;
  for(var index$1 = cardNumber ,index_finish$1 = cardNumber + amountOfWinners$1 | 0; index$1 < index_finish$1; ++index$1){
    processCard(cards, Caml_array.get(cards, index$1), totalCardsSoFar);
  }
}

function sum(input) {
  var cards = input.split("\n").filter(function (line) {
        return line.trim().length > 0;
      });
  var totalCardsSoFar = {
    contents: 0
  };
  cards.forEach(function (card) {
        processCard(cards, card, totalCardsSoFar);
      });
  return totalCardsSoFar.contents;
}

console.log(sum(Utilities.input));

var input = Utilities.input;

var input2 = "Card 1: 41 48 83 86 17 | 83 86  6 31 17  9 48 53\nCard 2: 13 32 20 16 61 | 61 30 68 82 17 32 24 19\nCard 3:  1 21 53 59 44 | 69 82 63 72 16 21 14  1\nCard 4: 41 92 73 84 69 | 59 84 76 51 58  5 54 83\nCard 5: 87 83 26 28 32 | 88 30 70 12 93 22 82 36\nCard 6: 31 18 13 56 72 | 74 77 10 23 35 67 36 11";

export {
  input ,
  input2 ,
  memo ,
  processCard ,
  sum ,
}
/*  Not a pure module */
